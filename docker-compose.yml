version: '3.8'

services:
  redis:
    image: redis:7-alpine
    container_name: mini-aime-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: mini-aime-redis-ui
    ports:
      - "8081:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379
    depends_on:
      - redis
    restart: unless-stopped

  # SQLite doesn't need a separate container since it's file-based
  # But we can create a volume for the database file
  app:
    build: .
    container_name: mini-aime-app
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data  # SQLite database will be stored here
      - ./logs:/app/logs  # Application logs
    environment:
      - REDIS_URL=redis://redis:6379
      - DATABASE_PATH=/app/data/mini_aime.db
      - LOG_LEVEL=INFO
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LLM_BASE_URL=${LLM_BASE_URL:-https://api.deepseek.com}
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: mini-aime-network
